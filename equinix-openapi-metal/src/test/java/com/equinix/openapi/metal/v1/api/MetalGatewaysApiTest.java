/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.metal.v1.api;

import com.equinix.openapi.ApiException;
import com.equinix.openapi.metal.v1.model.CreateMetalGatewayRequest;
import com.equinix.openapi.metal.v1.model.Error;
import com.equinix.openapi.metal.v1.model.FindMetalGatewayById200Response;
import com.equinix.openapi.metal.v1.model.MetalGatewayList;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MetalGatewaysApi
 */
@Disabled
public class MetalGatewaysApiTest {

    private final MetalGatewaysApi api = new MetalGatewaysApi();

    /**
     * Create a metal gateway
     *
     * Create a metal gateway in a project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createMetalGatewayTest() throws ApiException {
        UUID projectId = null;
        CreateMetalGatewayRequest createMetalGatewayRequest = null;
        Integer page = null;
        Integer perPage = null;
        FindMetalGatewayById200Response response = api.createMetalGateway(projectId, createMetalGatewayRequest, page, perPage);
        // TODO: test validations
    }

    /**
     * Deletes the metal gateway
     *
     * Deletes a specific metal gateway
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMetalGatewayTest() throws ApiException {
        UUID id = null;
        api.deleteMetalGateway(id);
        // TODO: test validations
    }

    /**
     * Returns the metal gateway
     *
     * Returns a specific metal gateway
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findMetalGatewayByIdTest() throws ApiException {
        UUID id = null;
        List<String> include = null;
        List<String> exclude = null;
        FindMetalGatewayById200Response response = api.findMetalGatewayById(id, include, exclude);
        // TODO: test validations
    }

    /**
     * Returns all metal gateways for a project
     *
     * Return all metal gateways for a project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findMetalGatewaysByProjectTest() throws ApiException {
        UUID projectId = null;
        Integer page = null;
        Integer perPage = null;
        MetalGatewayList response = api.findMetalGatewaysByProject(projectId, page, perPage);
        // TODO: test validations
    }

}
