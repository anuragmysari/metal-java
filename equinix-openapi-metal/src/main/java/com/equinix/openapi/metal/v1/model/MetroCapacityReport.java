/*
 * Metal API
 * # Introduction Equinix Metal provides a RESTful HTTP API which can be reached at <https://api.equinix.com/metal/v1>. This document describes the API and how to use it.  The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account. Every feature of the Equinix Metal web interface is accessible through the API.  The API docs are generated from the Equinix Metal OpenAPI specification and are officially hosted at <https://metal.equinix.com/developers/api>.  # Common Parameters  The Equinix Metal API uses a few methods to minimize network traffic and improve throughput. These parameters are not used in all API calls, but are used often enough to warrant their own section. Look for these parameters in the documentation for the API calls that support them.  ## Pagination  Pagination is used to limit the number of results returned in a single request. The API will return a maximum of 100 results per page. To retrieve additional results, you can use the `page` and `per_page` query parameters.  The `page` parameter is used to specify the page number. The first page is `1`. The `per_page` parameter is used to specify the number of results per page. The maximum number of results differs by resource type.  ## Sorting  Where offered, the API allows you to sort results by a specific field. To sort results use the `sort_by` query parameter with the root level field name as the value. The `sort_direction` parameter is used to specify the sort direction, either either `asc` (ascending) or `desc` (descending).  ## Filtering  Filtering is used to limit the results returned in a single request. The API supports filtering by certain fields in the response. To filter results, you can use the field as a query parameter.  For example, to filter the IP list to only return public IPv4 addresses, you can filter by the `type` field, as in the following request:  ```sh curl -H 'X-Auth-Token: my_authentication_token' \\   https://api.equinix.com/metal/v1/projects/id/ips?type=public_ipv4 ```  Only IP addresses with the `type` field set to `public_ipv4` will be returned.  ## Searching  Searching is used to find matching resources using multiple field comparissons. The API supports searching in resources that define this behavior. The fields available for search differ by resource, as does the search strategy.  To search resources you can use the `search` query parameter.  ## Include and Exclude  For resources that contain references to other resources, sucha as a Device that refers to the Project it resides in, the Equinix Metal API will returns `href` values (API links) to the associated resource.  ```json {   ...   \"project\": {     \"href\": \"/metal/v1/projects/f3f131c8-f302-49ef-8c44-9405022dc6dd\"   } } ```  If you're going need the project details, you can avoid a second API request.  Specify the contained `href` resources and collections that you'd like to have included in the response using the `include` query parameter.  For example:    ```sh curl -H 'X-Auth-Token: my_authentication_token' \\   https://api.equinix.com/metal/v1/user?include=projects ```  The `include` parameter is generally accepted in `GET`, `POST`, `PUT`, and `PATCH` requests where `href` resources are presented.  To have multiple resources include, use a comma-separated list (e.g. `?include=emails,projects,memberships`).  ```sh curl -H 'X-Auth-Token: my_authentication_token' \\   https://api.equinix.com/metal/v1/user?include=emails,projects,memberships ```  You may also include nested associations up to three levels deep using dot notation (`?include=memberships.projects`):  ```sh curl -H 'X-Auth-Token: my_authentication_token' \\   https://api.equinix.com/metal/v1/user?include=memberships.projects ```  To exclude resources, and optimize response delivery, use the `exclude` query parameter. The `exclude` parameter is generally accepted in `GET`, `POST`, `PUT`, and `PATCH` requests for fields with nested object responses. When excluded, these fields will be replaced with an object that contains only an `href` field. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.metal.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.equinix.openapi.metal.v1.model.CapacityPerFacility;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.equinix.openapi.JSON;

/**
 * MetroCapacityReport
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MetroCapacityReport {
  public static final String SERIALIZED_NAME_AM = "am";
  @SerializedName(SERIALIZED_NAME_AM)
  private CapacityPerFacility am;

  public static final String SERIALIZED_NAME_AT = "at";
  @SerializedName(SERIALIZED_NAME_AT)
  private CapacityPerFacility at;

  public static final String SERIALIZED_NAME_CH = "ch";
  @SerializedName(SERIALIZED_NAME_CH)
  private CapacityPerFacility ch;

  public static final String SERIALIZED_NAME_DA = "da";
  @SerializedName(SERIALIZED_NAME_DA)
  private CapacityPerFacility da;

  public static final String SERIALIZED_NAME_DC = "dc";
  @SerializedName(SERIALIZED_NAME_DC)
  private CapacityPerFacility dc;

  public static final String SERIALIZED_NAME_FR = "fr";
  @SerializedName(SERIALIZED_NAME_FR)
  private CapacityPerFacility fr;

  public static final String SERIALIZED_NAME_HK = "hk";
  @SerializedName(SERIALIZED_NAME_HK)
  private CapacityPerFacility hk;

  public static final String SERIALIZED_NAME_LA = "la";
  @SerializedName(SERIALIZED_NAME_LA)
  private CapacityPerFacility la;

  public static final String SERIALIZED_NAME_LD = "ld";
  @SerializedName(SERIALIZED_NAME_LD)
  private CapacityPerFacility ld;

  public static final String SERIALIZED_NAME_MD = "md";
  @SerializedName(SERIALIZED_NAME_MD)
  private CapacityPerFacility md;

  public static final String SERIALIZED_NAME_NY = "ny";
  @SerializedName(SERIALIZED_NAME_NY)
  private CapacityPerFacility ny;

  public static final String SERIALIZED_NAME_PA = "pa";
  @SerializedName(SERIALIZED_NAME_PA)
  private CapacityPerFacility pa;

  public static final String SERIALIZED_NAME_SE = "se";
  @SerializedName(SERIALIZED_NAME_SE)
  private CapacityPerFacility se;

  public static final String SERIALIZED_NAME_SG = "sg";
  @SerializedName(SERIALIZED_NAME_SG)
  private CapacityPerFacility sg;

  public static final String SERIALIZED_NAME_SL = "sl";
  @SerializedName(SERIALIZED_NAME_SL)
  private CapacityPerFacility sl;

  public static final String SERIALIZED_NAME_SP = "sp";
  @SerializedName(SERIALIZED_NAME_SP)
  private CapacityPerFacility sp;

  public static final String SERIALIZED_NAME_SV = "sv";
  @SerializedName(SERIALIZED_NAME_SV)
  private CapacityPerFacility sv;

  public static final String SERIALIZED_NAME_SY = "sy";
  @SerializedName(SERIALIZED_NAME_SY)
  private CapacityPerFacility sy;

  public static final String SERIALIZED_NAME_TR = "tr";
  @SerializedName(SERIALIZED_NAME_TR)
  private CapacityPerFacility tr;

  public static final String SERIALIZED_NAME_TY = "ty";
  @SerializedName(SERIALIZED_NAME_TY)
  private CapacityPerFacility ty;

  public MetroCapacityReport() {
  }

  public MetroCapacityReport am(CapacityPerFacility am) {
    
    this.am = am;
    return this;
  }

   /**
   * Get am
   * @return am
  **/
  @javax.annotation.Nullable

  public CapacityPerFacility getAm() {
    return am;
  }


  public void setAm(CapacityPerFacility am) {
    this.am = am;
  }


  public MetroCapacityReport at(CapacityPerFacility at) {
    
    this.at = at;
    return this;
  }

   /**
   * Get at
   * @return at
  **/
  @javax.annotation.Nullable

  public CapacityPerFacility getAt() {
    return at;
  }


  public void setAt(CapacityPerFacility at) {
    this.at = at;
  }


  public MetroCapacityReport ch(CapacityPerFacility ch) {
    
    this.ch = ch;
    return this;
  }

   /**
   * Get ch
   * @return ch
  **/
  @javax.annotation.Nullable

  public CapacityPerFacility getCh() {
    return ch;
  }


  public void setCh(CapacityPerFacility ch) {
    this.ch = ch;
  }


  public MetroCapacityReport da(CapacityPerFacility da) {
    
    this.da = da;
    return this;
  }

   /**
   * Get da
   * @return da
  **/
  @javax.annotation.Nullable

  public CapacityPerFacility getDa() {
    return da;
  }


  public void setDa(CapacityPerFacility da) {
    this.da = da;
  }


  public MetroCapacityReport dc(CapacityPerFacility dc) {
    
    this.dc = dc;
    return this;
  }

   /**
   * Get dc
   * @return dc
  **/
  @javax.annotation.Nullable

  public CapacityPerFacility getDc() {
    return dc;
  }


  public void setDc(CapacityPerFacility dc) {
    this.dc = dc;
  }


  public MetroCapacityReport fr(CapacityPerFacility fr) {
    
    this.fr = fr;
    return this;
  }

   /**
   * Get fr
   * @return fr
  **/
  @javax.annotation.Nullable

  public CapacityPerFacility getFr() {
    return fr;
  }


  public void setFr(CapacityPerFacility fr) {
    this.fr = fr;
  }


  public MetroCapacityReport hk(CapacityPerFacility hk) {
    
    this.hk = hk;
    return this;
  }

   /**
   * Get hk
   * @return hk
  **/
  @javax.annotation.Nullable

  public CapacityPerFacility getHk() {
    return hk;
  }


  public void setHk(CapacityPerFacility hk) {
    this.hk = hk;
  }


  public MetroCapacityReport la(CapacityPerFacility la) {
    
    this.la = la;
    return this;
  }

   /**
   * Get la
   * @return la
  **/
  @javax.annotation.Nullable

  public CapacityPerFacility getLa() {
    return la;
  }


  public void setLa(CapacityPerFacility la) {
    this.la = la;
  }


  public MetroCapacityReport ld(CapacityPerFacility ld) {
    
    this.ld = ld;
    return this;
  }

   /**
   * Get ld
   * @return ld
  **/
  @javax.annotation.Nullable

  public CapacityPerFacility getLd() {
    return ld;
  }


  public void setLd(CapacityPerFacility ld) {
    this.ld = ld;
  }


  public MetroCapacityReport md(CapacityPerFacility md) {
    
    this.md = md;
    return this;
  }

   /**
   * Get md
   * @return md
  **/
  @javax.annotation.Nullable

  public CapacityPerFacility getMd() {
    return md;
  }


  public void setMd(CapacityPerFacility md) {
    this.md = md;
  }


  public MetroCapacityReport ny(CapacityPerFacility ny) {
    
    this.ny = ny;
    return this;
  }

   /**
   * Get ny
   * @return ny
  **/
  @javax.annotation.Nullable

  public CapacityPerFacility getNy() {
    return ny;
  }


  public void setNy(CapacityPerFacility ny) {
    this.ny = ny;
  }


  public MetroCapacityReport pa(CapacityPerFacility pa) {
    
    this.pa = pa;
    return this;
  }

   /**
   * Get pa
   * @return pa
  **/
  @javax.annotation.Nullable

  public CapacityPerFacility getPa() {
    return pa;
  }


  public void setPa(CapacityPerFacility pa) {
    this.pa = pa;
  }


  public MetroCapacityReport se(CapacityPerFacility se) {
    
    this.se = se;
    return this;
  }

   /**
   * Get se
   * @return se
  **/
  @javax.annotation.Nullable

  public CapacityPerFacility getSe() {
    return se;
  }


  public void setSe(CapacityPerFacility se) {
    this.se = se;
  }


  public MetroCapacityReport sg(CapacityPerFacility sg) {
    
    this.sg = sg;
    return this;
  }

   /**
   * Get sg
   * @return sg
  **/
  @javax.annotation.Nullable

  public CapacityPerFacility getSg() {
    return sg;
  }


  public void setSg(CapacityPerFacility sg) {
    this.sg = sg;
  }


  public MetroCapacityReport sl(CapacityPerFacility sl) {
    
    this.sl = sl;
    return this;
  }

   /**
   * Get sl
   * @return sl
  **/
  @javax.annotation.Nullable

  public CapacityPerFacility getSl() {
    return sl;
  }


  public void setSl(CapacityPerFacility sl) {
    this.sl = sl;
  }


  public MetroCapacityReport sp(CapacityPerFacility sp) {
    
    this.sp = sp;
    return this;
  }

   /**
   * Get sp
   * @return sp
  **/
  @javax.annotation.Nullable

  public CapacityPerFacility getSp() {
    return sp;
  }


  public void setSp(CapacityPerFacility sp) {
    this.sp = sp;
  }


  public MetroCapacityReport sv(CapacityPerFacility sv) {
    
    this.sv = sv;
    return this;
  }

   /**
   * Get sv
   * @return sv
  **/
  @javax.annotation.Nullable

  public CapacityPerFacility getSv() {
    return sv;
  }


  public void setSv(CapacityPerFacility sv) {
    this.sv = sv;
  }


  public MetroCapacityReport sy(CapacityPerFacility sy) {
    
    this.sy = sy;
    return this;
  }

   /**
   * Get sy
   * @return sy
  **/
  @javax.annotation.Nullable

  public CapacityPerFacility getSy() {
    return sy;
  }


  public void setSy(CapacityPerFacility sy) {
    this.sy = sy;
  }


  public MetroCapacityReport tr(CapacityPerFacility tr) {
    
    this.tr = tr;
    return this;
  }

   /**
   * Get tr
   * @return tr
  **/
  @javax.annotation.Nullable

  public CapacityPerFacility getTr() {
    return tr;
  }


  public void setTr(CapacityPerFacility tr) {
    this.tr = tr;
  }


  public MetroCapacityReport ty(CapacityPerFacility ty) {
    
    this.ty = ty;
    return this;
  }

   /**
   * Get ty
   * @return ty
  **/
  @javax.annotation.Nullable

  public CapacityPerFacility getTy() {
    return ty;
  }


  public void setTy(CapacityPerFacility ty) {
    this.ty = ty;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the MetroCapacityReport instance itself
   */
  public MetroCapacityReport putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetroCapacityReport metroCapacityReport = (MetroCapacityReport) o;
    return Objects.equals(this.am, metroCapacityReport.am) &&
        Objects.equals(this.at, metroCapacityReport.at) &&
        Objects.equals(this.ch, metroCapacityReport.ch) &&
        Objects.equals(this.da, metroCapacityReport.da) &&
        Objects.equals(this.dc, metroCapacityReport.dc) &&
        Objects.equals(this.fr, metroCapacityReport.fr) &&
        Objects.equals(this.hk, metroCapacityReport.hk) &&
        Objects.equals(this.la, metroCapacityReport.la) &&
        Objects.equals(this.ld, metroCapacityReport.ld) &&
        Objects.equals(this.md, metroCapacityReport.md) &&
        Objects.equals(this.ny, metroCapacityReport.ny) &&
        Objects.equals(this.pa, metroCapacityReport.pa) &&
        Objects.equals(this.se, metroCapacityReport.se) &&
        Objects.equals(this.sg, metroCapacityReport.sg) &&
        Objects.equals(this.sl, metroCapacityReport.sl) &&
        Objects.equals(this.sp, metroCapacityReport.sp) &&
        Objects.equals(this.sv, metroCapacityReport.sv) &&
        Objects.equals(this.sy, metroCapacityReport.sy) &&
        Objects.equals(this.tr, metroCapacityReport.tr) &&
        Objects.equals(this.ty, metroCapacityReport.ty)&&
        Objects.equals(this.additionalProperties, metroCapacityReport.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(am, at, ch, da, dc, fr, hk, la, ld, md, ny, pa, se, sg, sl, sp, sv, sy, tr, ty, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetroCapacityReport {\n");
    sb.append("    am: ").append(toIndentedString(am)).append("\n");
    sb.append("    at: ").append(toIndentedString(at)).append("\n");
    sb.append("    ch: ").append(toIndentedString(ch)).append("\n");
    sb.append("    da: ").append(toIndentedString(da)).append("\n");
    sb.append("    dc: ").append(toIndentedString(dc)).append("\n");
    sb.append("    fr: ").append(toIndentedString(fr)).append("\n");
    sb.append("    hk: ").append(toIndentedString(hk)).append("\n");
    sb.append("    la: ").append(toIndentedString(la)).append("\n");
    sb.append("    ld: ").append(toIndentedString(ld)).append("\n");
    sb.append("    md: ").append(toIndentedString(md)).append("\n");
    sb.append("    ny: ").append(toIndentedString(ny)).append("\n");
    sb.append("    pa: ").append(toIndentedString(pa)).append("\n");
    sb.append("    se: ").append(toIndentedString(se)).append("\n");
    sb.append("    sg: ").append(toIndentedString(sg)).append("\n");
    sb.append("    sl: ").append(toIndentedString(sl)).append("\n");
    sb.append("    sp: ").append(toIndentedString(sp)).append("\n");
    sb.append("    sv: ").append(toIndentedString(sv)).append("\n");
    sb.append("    sy: ").append(toIndentedString(sy)).append("\n");
    sb.append("    tr: ").append(toIndentedString(tr)).append("\n");
    sb.append("    ty: ").append(toIndentedString(ty)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("am");
    openapiFields.add("at");
    openapiFields.add("ch");
    openapiFields.add("da");
    openapiFields.add("dc");
    openapiFields.add("fr");
    openapiFields.add("hk");
    openapiFields.add("la");
    openapiFields.add("ld");
    openapiFields.add("md");
    openapiFields.add("ny");
    openapiFields.add("pa");
    openapiFields.add("se");
    openapiFields.add("sg");
    openapiFields.add("sl");
    openapiFields.add("sp");
    openapiFields.add("sv");
    openapiFields.add("sy");
    openapiFields.add("tr");
    openapiFields.add("ty");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to MetroCapacityReport
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!MetroCapacityReport.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MetroCapacityReport is not found in the empty JSON string", MetroCapacityReport.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `am`
      if (jsonObj.get("am") != null && !jsonObj.get("am").isJsonNull()) {
        CapacityPerFacility.validateJsonObject(jsonObj.getAsJsonObject("am"));
      }
      // validate the optional field `at`
      if (jsonObj.get("at") != null && !jsonObj.get("at").isJsonNull()) {
        CapacityPerFacility.validateJsonObject(jsonObj.getAsJsonObject("at"));
      }
      // validate the optional field `ch`
      if (jsonObj.get("ch") != null && !jsonObj.get("ch").isJsonNull()) {
        CapacityPerFacility.validateJsonObject(jsonObj.getAsJsonObject("ch"));
      }
      // validate the optional field `da`
      if (jsonObj.get("da") != null && !jsonObj.get("da").isJsonNull()) {
        CapacityPerFacility.validateJsonObject(jsonObj.getAsJsonObject("da"));
      }
      // validate the optional field `dc`
      if (jsonObj.get("dc") != null && !jsonObj.get("dc").isJsonNull()) {
        CapacityPerFacility.validateJsonObject(jsonObj.getAsJsonObject("dc"));
      }
      // validate the optional field `fr`
      if (jsonObj.get("fr") != null && !jsonObj.get("fr").isJsonNull()) {
        CapacityPerFacility.validateJsonObject(jsonObj.getAsJsonObject("fr"));
      }
      // validate the optional field `hk`
      if (jsonObj.get("hk") != null && !jsonObj.get("hk").isJsonNull()) {
        CapacityPerFacility.validateJsonObject(jsonObj.getAsJsonObject("hk"));
      }
      // validate the optional field `la`
      if (jsonObj.get("la") != null && !jsonObj.get("la").isJsonNull()) {
        CapacityPerFacility.validateJsonObject(jsonObj.getAsJsonObject("la"));
      }
      // validate the optional field `ld`
      if (jsonObj.get("ld") != null && !jsonObj.get("ld").isJsonNull()) {
        CapacityPerFacility.validateJsonObject(jsonObj.getAsJsonObject("ld"));
      }
      // validate the optional field `md`
      if (jsonObj.get("md") != null && !jsonObj.get("md").isJsonNull()) {
        CapacityPerFacility.validateJsonObject(jsonObj.getAsJsonObject("md"));
      }
      // validate the optional field `ny`
      if (jsonObj.get("ny") != null && !jsonObj.get("ny").isJsonNull()) {
        CapacityPerFacility.validateJsonObject(jsonObj.getAsJsonObject("ny"));
      }
      // validate the optional field `pa`
      if (jsonObj.get("pa") != null && !jsonObj.get("pa").isJsonNull()) {
        CapacityPerFacility.validateJsonObject(jsonObj.getAsJsonObject("pa"));
      }
      // validate the optional field `se`
      if (jsonObj.get("se") != null && !jsonObj.get("se").isJsonNull()) {
        CapacityPerFacility.validateJsonObject(jsonObj.getAsJsonObject("se"));
      }
      // validate the optional field `sg`
      if (jsonObj.get("sg") != null && !jsonObj.get("sg").isJsonNull()) {
        CapacityPerFacility.validateJsonObject(jsonObj.getAsJsonObject("sg"));
      }
      // validate the optional field `sl`
      if (jsonObj.get("sl") != null && !jsonObj.get("sl").isJsonNull()) {
        CapacityPerFacility.validateJsonObject(jsonObj.getAsJsonObject("sl"));
      }
      // validate the optional field `sp`
      if (jsonObj.get("sp") != null && !jsonObj.get("sp").isJsonNull()) {
        CapacityPerFacility.validateJsonObject(jsonObj.getAsJsonObject("sp"));
      }
      // validate the optional field `sv`
      if (jsonObj.get("sv") != null && !jsonObj.get("sv").isJsonNull()) {
        CapacityPerFacility.validateJsonObject(jsonObj.getAsJsonObject("sv"));
      }
      // validate the optional field `sy`
      if (jsonObj.get("sy") != null && !jsonObj.get("sy").isJsonNull()) {
        CapacityPerFacility.validateJsonObject(jsonObj.getAsJsonObject("sy"));
      }
      // validate the optional field `tr`
      if (jsonObj.get("tr") != null && !jsonObj.get("tr").isJsonNull()) {
        CapacityPerFacility.validateJsonObject(jsonObj.getAsJsonObject("tr"));
      }
      // validate the optional field `ty`
      if (jsonObj.get("ty") != null && !jsonObj.get("ty").isJsonNull()) {
        CapacityPerFacility.validateJsonObject(jsonObj.getAsJsonObject("ty"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MetroCapacityReport.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MetroCapacityReport' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MetroCapacityReport> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MetroCapacityReport.class));

       return (TypeAdapter<T>) new TypeAdapter<MetroCapacityReport>() {
           @Override
           public void write(JsonWriter out, MetroCapacityReport value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public MetroCapacityReport read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             MetroCapacityReport instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of MetroCapacityReport given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of MetroCapacityReport
  * @throws IOException if the JSON string is invalid with respect to MetroCapacityReport
  */
  public static MetroCapacityReport fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MetroCapacityReport.class);
  }

 /**
  * Convert an instance of MetroCapacityReport to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

