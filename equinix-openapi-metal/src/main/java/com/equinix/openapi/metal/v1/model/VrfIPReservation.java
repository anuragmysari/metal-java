/*
 * Metal API
 * This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@equinixmetal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.metal.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.equinix.openapi.metal.v1.model.Href;
import com.equinix.openapi.metal.v1.model.IPReservation;
import com.equinix.openapi.metal.v1.model.IPReservationMetro;
import com.equinix.openapi.metal.v1.model.MetalGatewayLite;
import com.equinix.openapi.metal.v1.model.Project;
import com.equinix.openapi.metal.v1.model.User;
import com.equinix.openapi.metal.v1.model.Vrf;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.equinix.openapi.JSON;

/**
 * VrfIPReservation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class VrfIPReservation extends IPReservation {
  public static final String SERIALIZED_NAME_VRF = "vrf";
  @SerializedName(SERIALIZED_NAME_VRF)
  private Vrf vrf;

  public static final String SERIALIZED_NAME_CREATED_BY = "created_by";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private User createdBy;

  public VrfIPReservation() {
  }

  public VrfIPReservation vrf(Vrf vrf) {
    
    this.vrf = vrf;
    return this;
  }

   /**
   * Get vrf
   * @return vrf
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Vrf getVrf() {
    return vrf;
  }


  public void setVrf(Vrf vrf) {
    this.vrf = vrf;
  }


  public VrfIPReservation createdBy(User createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public User getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(User createdBy) {
    this.createdBy = createdBy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VrfIPReservation vrfIPReservation = (VrfIPReservation) o;
    return Objects.equals(this.vrf, vrfIPReservation.vrf) &&
        Objects.equals(this.createdBy, vrfIPReservation.createdBy) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vrf, createdBy, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VrfIPReservation {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    vrf: ").append(toIndentedString(vrf)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address_family");
    openapiFields.add("bill");
    openapiFields.add("cidr");
    openapiFields.add("created_at");
    openapiFields.add("href");
    openapiFields.add("id");
    openapiFields.add("manageable");
    openapiFields.add("management");
    openapiFields.add("metal_gateway");
    openapiFields.add("metro");
    openapiFields.add("netmask");
    openapiFields.add("network");
    openapiFields.add("public");
    openapiFields.add("state");
    openapiFields.add("tags");
    openapiFields.add("details");
    openapiFields.add("customdata");
    openapiFields.add("project");
    openapiFields.add("project_lite");
    openapiFields.add("address");
    openapiFields.add("gateway");
    openapiFields.add("type");
    openapiFields.add("vrf");
    openapiFields.add("created_by");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("vrf");
    openapiRequiredFields.add("type");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to VrfIPReservation
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (VrfIPReservation.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in VrfIPReservation is not found in the empty JSON string", VrfIPReservation.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!VrfIPReservation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VrfIPReservation` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : VrfIPReservation.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the optional field `vrf`
      if (jsonObj.get("vrf") != null && !jsonObj.get("vrf").isJsonNull()) {
        Vrf.validateJsonObject(jsonObj.getAsJsonObject("vrf"));
      }
      // validate the optional field `created_by`
      if (jsonObj.get("created_by") != null && !jsonObj.get("created_by").isJsonNull()) {
        User.validateJsonObject(jsonObj.getAsJsonObject("created_by"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VrfIPReservation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VrfIPReservation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VrfIPReservation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VrfIPReservation.class));

       return (TypeAdapter<T>) new TypeAdapter<VrfIPReservation>() {
           @Override
           public void write(JsonWriter out, VrfIPReservation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VrfIPReservation read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of VrfIPReservation given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of VrfIPReservation
  * @throws IOException if the JSON string is invalid with respect to VrfIPReservation
  */
  public static VrfIPReservation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VrfIPReservation.class);
  }

 /**
  * Convert an instance of VrfIPReservation to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

