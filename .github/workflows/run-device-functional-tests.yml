# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Execute functional tests

on:
  workflow_dispatch:
    inputs:
        metro:
          description: 'metro code where you want to deploy'
          default: 'DA'
          required: true
        os:
          description: 'operating system slug'
          default: 'debian_11'
          required: true
        plan:
          description: 'instance server plan'
          default: 'c3.small.x86'
          required: true
        token:
          description: 'Users temp API KEY token (Note: delete after use)'
          required: true
        project_uuid:
          description: 'Project UUID where to deploy instance'
          required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    - name: Run equinix metal-java make
      run: make docker_run

    - name: Install equinix client
      working-directory: ./equinix-openapi-metal
      run: mvn clean install --file pom.xml

    - name: Set env parameters amd create device-test props file
      run: |
        echo "metro=${{ github.event.inputs.metro }}" > equinix-functional-test/src/test/resources/device-test.properties
        echo -e "\nos=${{ github.event.inputs.os }}" >> equinix-functional-test/src/test/resources/device-test.properties
        echo -e "\nplan=${{ github.event.inputs.plan }}" >> equinix-functional-test/src/test/resources/device-test.properties

        echo `cat equinix-functional-test/src/test/resources/device-test.properties`

    - name: Run functional tests for DeviceOperator.
      working-directory: ./equinix-functional-test
      run: mvn clean test -Dtest=com.equinix.test.functional.TestDeviceOperator.java --file pom.xml
      env:
        FUNCTIONAL_TEST_TOKEN: ${{ github.event.inputs.token }}
        FUNCTIONAL_TEST_PROJECT_UUID: ${{ github.event.inputs.project_uuid }}